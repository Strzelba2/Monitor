# Generated by Django 5.1.2 on 2024-11-08 23:34

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import session.models
import session.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockedIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(help_text='The IP address that is being blocked.', max_length=255, unique=True, validators=[session.validators.validate_ip_address_with_port])),
                ('blocked_until', models.DateTimeField(default=session.models.get_default_blocked_until, help_text='The time until which the IP address will remain blocked.', validators=[session.validators.validate_blocked_until])),
                ('path', models.CharField(default='/default', help_text='The path associated with the blocked IP address (optional).', max_length=255)),
                ('user_agent', models.CharField(blank=True, default='', help_text='The user agent string associated with the blocked IP address (optional).', max_length=255, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(blank=True, help_text='The URL path of the requested resource.', max_length=255, null=True)),
                ('method', models.CharField(blank=True, help_text='The HTTP method used for the request (e.g., GET, POST, PUT).', max_length=10, null=True)),
                ('ip_address', models.CharField(blank=True, help_text='The IP address of the client making the request.', max_length=45, null=True)),
                ('user_agent', models.CharField(blank=True, help_text="The user agent string sent by the client's browser.", max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='The timestamp when the request was received.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the server.', max_length=100)),
                ('ip_address', models.GenericIPAddressField(help_text='The IP address of the server.', unique=True)),
                ('port', models.IntegerField(help_text='The port number of the server.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)])),
                ('location', models.CharField(help_text='The location of the server.', max_length=100)),
                ('trusty', models.BooleanField(default=False, help_text='Indicates whether the server is trusted.')),
                ('available', models.BooleanField(default=False, help_text='Indicates whether the server is available.')),
                ('user', models.ForeignKey(blank=True, help_text='The user associated with the server (optional).', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionId', models.CharField(db_index=True, editable=False, help_text='The unique identifier for this session\\.', max_length=32, unique=True)),
                ('expires', models.DateTimeField(default=datetime.datetime(2024, 11, 9, 1, 34, 42, 686869, tzinfo=datetime.timezone.utc), editable=False, help_text='The timestamp when this session will expire\\.')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The timestamp when this session was created\\.')),
                ('server', models.OneToOneField(help_text='The server where this session is active\\.', on_delete=django.db.models.deletion.CASCADE, to='session.server')),
                ('user', models.OneToOneField(help_text='The user associated with this session.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
